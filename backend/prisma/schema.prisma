// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EthPrice {
  id        String   @id @default(uuid())
  price     Float
  timestamp DateTime @default(now())

  @@index([timestamp])
}

model Transaction {
  id              Int      @id @default(autoincrement())
  transactionHash String
  blockNumber     String
  timestamp       DateTime
  sender          String
  recipient       String
  feeInEth        String
  feeInUsdt       String
}

model Summary {
  id           String   @id @default(uuid())
  totalTxns    Int      @default(0)
  totalFeeETH  Float    @default(0)
  totalFeeUSDT Float    @default(0)
  updatedAt    DateTime @updatedAt
}

enum BatchStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}

model HistoricalTransactionsBatch {
  id             Int         @id @default(autoincrement())
  startBlock     Int
  endBlock       Int
  dateFrom       String
  dateTo         String
  totalFeeInEth  Float       @default(0)
  totalFeeInUsdt Float       @default(0)
  totalTxns      Int         @default(0)
  status         BatchStatus @default(PENDING)
  updatedAt      DateTime    @updatedAt

  historicalTransactions HistoricalTransaction[]
}

model HistoricalTransaction {
  id              Int                         @id @default(autoincrement())
  transactionHash String
  feeInEth        String
  feeInUsdt       String
  batchId         Int
  batch           HistoricalTransactionsBatch @relation(fields: [batchId], references: [id])
}
