version: "3.8"

services:
  nestjs:
    container_name: uniscan-nestjs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sub-etha

  frontend:
    container_name: uniscan-frontend
    depends_on:
      - nestjs
    networks:
      - sub-etha

  postgres:
    container_name: uniscan-postgres
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sub-etha
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: uniscan-redis
    image: redis:6
    volumes:
      - redis_data:/data
    networks:
      - sub-etha
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  sub-etha:
