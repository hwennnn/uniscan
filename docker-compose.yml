version: "3.8"

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend

  frontend:
    build:
      context: ./frontend
    expose:
      - ${FRONTEND_PORT}
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    expose:
      - ${SERVER_PORT}
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - SERVER_PORT=${SERVER_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis_data:/data

volumes:
  nginx_logs:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
